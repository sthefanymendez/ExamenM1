function Queue() {
  this.array = [];
}

Queue.prototype.enqueue = function(elemento) {
  return this.array.push(elemento);
}

Queue.prototype.dequeue = function() {
  return this.array.shift();
}

Queue.prototype.size = function() {
  return this.array.length;
}

/**
 * ***** EJERCICIO 1 ***** - party()
 * 춰Tenemos un problema!
 * Se est치 organizando una fiesta para inaugurar las nuevas casas, pero hay personas desconocidas que intentan ingresar.
 * La funci칩n recibe un array que representa la fila de personas en orden que intentan ingresar.
 * Solo deben ingresar aquellos con el ticket "VIP" y que sean Conocidos (Known).
 * Las personas v치lidas se a침adir치n a una nueva QUEUE, donde se filtrar치n los invitados correctos.
 *
 * El array de movimientos tiene el siguiente formato:
 * [
 *   { name: "Carol", ticket: "FALSE", status: "Unknown" },
 *   { name: "Gonzalo", ticket: "VIP", status: "Known" },
 *   { name: "Micaias", ticket: "VIP", status: "Unknown" }
 * ]
 * Donde "ticket" y "status" representan el ingreso de una persona a la nueva QUEUE.
 * La funci칩n debe devolver la QUEUE que representa a los invitados v치lidos para ingresar.
 *
 * EJEMPLO:
 * party([
 *   { name: "Carol", ticket: "FALSE", status: "Unknown" },
 *   { name: "Gonzalo", ticket: "VIP", status: "Known" },
 *   { name: "Micaias", ticket: "VIP", status: "Unknown" }
 * ]); // Devuelve la QUEUE [{ name: "Gonzalo", ticket: "VIP", status: "Known" }]
 *
 * REQUISITOS:
 *  游릭 La funci칩n debe devolver la QUEUE resultante despu칠s de procesar los movimientos.
 *  游릭 Si la funci칩n intenta retirar a una persona cuando la QUEUE est치 vac칤a, debe devolver false.
 *  游릭 La QUEUE que devuelve la funci칩n debe ser una instancia de la clase QUEUE.
 */

/**
 * Filtra y devuelve una cola de invitados v치lidos que tengan ticket "VIP" y status "Known".
 * @param {Array} array - La lista de invitados.
 * @returns {Queue | boolean} - Cola de invitados v치lidos o false si no hay invitados v치lidos.
 */
function party(array) {
  // Tu c칩digo aqu칤

  const verifiedguests = new Queue()
  
  for (const guest of array) {
    if (guest.ticket === "VIP" && guest.status === "Known") {
      verifiedguests.enqueue(guest)
    }
  }

  if (verifiedguests.size()=== 0) {
    return false;
  }
  
  return verifiedguests
}

module.exports = {
  Queue,
  party
}